@page "/details/{Id}"
@inject CoinGeckoService CoinGeckoService

<h3>Crypto Details</h3>

@if (crypto == null)
{
    <p>Loading...</p>
}
else
{
    <div>
        <h4>@crypto.Name (@crypto.Symbol?.ToUpper())</h4>
        <table class="table">
            <tr>
                <td><strong>Current Price:</strong></td>
                <td>@crypto.Current_price.ToString("C")</td>
            </tr>
            <tr>
                <td><strong>Market Cap:</strong></td>
                <td>@crypto.Market_cap.ToString("C")</td>
            </tr>
            <tr>
                <td><strong>Description:</strong></td>
                <td>@crypto.Description</td>
            </tr>
        </table>
    </div>
}

@code {
    [Parameter]
    public string? Id { get; set; }

    private Crypto? crypto;

    protected override async Task OnParametersSetAsync()
    {
        try
        {
            if (!string.IsNullOrEmpty(Id))
            {
                crypto = await CoinGeckoService.GetCryptoDetailsAsync(Id);
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading crypto details: {ex.Message}");
        }
    }
}